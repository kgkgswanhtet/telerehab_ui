#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Jun 16, 2023 02:41:02 PM +0630  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import home_gui_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40' # X11 color: #666666
_ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black' 
_tabfg2 = 'black' 
_tabbg1 = 'grey75' 
_tabbg2 = 'grey89' 
_bgmode = 'light' 

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("700x450+271+146")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1,  1)
        top.title("Toplevel 0")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")
        top.configure(padx="2")
        top.configure(pady="2")

        self.top = top

        self.Balance_test = tk.Button(self.top)
        self.Balance_test.place(relx=0.129, rely=0.6, height=40, width=120)
        self.Balance_test.configure(activebackground="beige")
        self.Balance_test.configure(activeforeground="black")
        self.Balance_test.configure(background="#d9d9d9")
        self.Balance_test.configure(command=home_gui_support.open_balance_test)
        self.Balance_test.configure(compound='left')
        self.Balance_test.configure(disabledforeground="#a3a3a3")
        self.Balance_test.configure(foreground="#000000")
        self.Balance_test.configure(highlightbackground="#d9d9d9")
        self.Balance_test.configure(highlightcolor="black")
        self.Balance_test.configure(padx="10")
        self.Balance_test.configure(pady="0")
        self.Balance_test.configure(state='active')
        self.Balance_test.configure(text='''Balance Test''')
        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.257, rely=0.222, height=73, width=327)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI} -size 22 -weight bold -slant italic")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Telerehab Playground''')
        self.Sit_stand = tk.Button(self.top)
        self.Sit_stand.place(relx=0.414, rely=0.6, height=40, width=120)
        self.Sit_stand.configure(activebackground="beige")
        self.Sit_stand.configure(activeforeground="black")
        self.Sit_stand.configure(background="#d9d9d9")
        self.Sit_stand.configure(command=home_gui_support.open_sitstand_test)
        self.Sit_stand.configure(compound='left')
        self.Sit_stand.configure(disabledforeground="#a3a3a3")
        self.Sit_stand.configure(foreground="#000000")
        self.Sit_stand.configure(highlightbackground="#d9d9d9")
        self.Sit_stand.configure(highlightcolor="black")
        self.Sit_stand.configure(padx="10")
        self.Sit_stand.configure(pady="0")
        self.Sit_stand.configure(state='active')
        self.Sit_stand.configure(text='''Sit-Stand Test''')
        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Speed_test = tk.Button(self.top)
        self.Speed_test.place(relx=0.7, rely=0.6, height=40, width=120)
        self.Speed_test.configure(activebackground="beige")
        self.Speed_test.configure(activeforeground="black")
        self.Speed_test.configure(background="#d9d9d9")
        self.Speed_test.configure(command=home_gui_support.open_speed_test)
        self.Speed_test.configure(compound='left')
        self.Speed_test.configure(disabledforeground="#a3a3a3")
        self.Speed_test.configure(foreground="#000000")
        self.Speed_test.configure(highlightbackground="#d9d9d9")
        self.Speed_test.configure(highlightcolor="black")
        self.Speed_test.configure(padx="10")
        self.Speed_test.configure(pady="0")
        self.Speed_test.configure(state='active')
        self.Speed_test.configure(text='''Gait Speed Test''')

def start_up():
    home_gui_support.main()

if __name__ == '__main__':
    home_gui_support.main()




